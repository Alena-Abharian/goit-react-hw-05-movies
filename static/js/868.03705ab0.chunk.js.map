{"version":3,"file":"static/js/868.03705ab0.chunk.js","mappings":"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","sources":["api/api.js","page/movieDetails/MovieDetails.styled.jsx","page/movieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASIC_URL = 'https://api.themoviedb.org/';\nconst PERSONAL_KEY = 'ad66edf283bb948b384e974542ed7aed';\n\n//page Home\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/trending/movie/day?api_key=${PERSONAL_KEY}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page MovieDetails\nexport async function getMovie(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}`);\n    return response.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Movies\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Cast\nexport async function getCast(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}`);\n    return response.data.cast;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Reviews\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ad66edf283bb948b384e974542ed7aed`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Button = styled(Link)`\n  background-color: ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  padding-left: ${p => p.theme.space[4]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  padding-top: ${p => p.theme.space[2]}px;\n  border-radius: 2px;\n  margin-bottom: 10px;\n`;\n\nexport const H1 = styled.h1`\n  margin-bottom: 10px;\n  margin-top: 0;\n  font-size: ${p => p.theme.fontSizes.l};\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 20px;\n  margin-top: 0;\n  font-size: ${p => p.theme.fontSizes.xm};\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 10px;\n  margin-top: 0;\n  font-size: ${p => p.theme.fontSizes.xm};\n`;\n\nexport const Nav = styled.li`\n  margin-top: 10px;\n`;\n\nexport const Item = styled(NavLink)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-weight: 600;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const Ul = styled.ul`\n  list-style: none;\n  //padding-left: 20px;\n  padding: 0;\n  text-decoration: none;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams, useNavigate } from 'react-router-dom';\nimport { getMovie } from '../../api/api';\nimport Box from '../../components/Box';\nimport { Button, Text, H1, Title, Nav, Item, Ul } from './MovieDetails.styled';\nimport { BiArrowBack } from 'react-icons/bi';\n\nconst MovieDetails = () => {\n  //state details movies\n  const [movies, setMovies] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovie(movieId)\n      .then(data => setMovies(data));\n  }, [movieId]);\n\n  if (!movies) {\n    return null;\n  }\n\n  return (\n    <Box as='section' p={20}>\n      <Box display='flex'>\n        <Box display='flex' flexDirection='column' alignItems='flex-start'>\n          <Button to={backLinkHref} onClick={() => navigate(-2)}> <BiArrowBack /></Button>\n          <img src={`https://image.tmdb.org/t/p/original${movies.poster_path}`} alt={movies.title} width={250} />\n        </Box>\n        <Box display='flex' flexDirection='column' alignItems='flex-start' pl={20} pt={30} width={600}>\n          <H1>{movies.title}</H1>\n          <Text>User score: {movies.vote_average}</Text>\n          <Title>Overview</Title>\n          <Text>{movies.overview}</Text>\n          <Title>Genres</Title>\n          <Text>{movies.genres.map(({ name, id }) => (<span key={id}>{name}</span>))}</Text>\n        </Box>\n      </Box>\n      <Box>\n        <p>Additional information</p>\n        <Ul>\n          <Nav> <Item to='cast'>&#9672; Cast</Item></Nav>\n          <Nav> <Item to='reviews'>&#9672; Reviews</Item></Nav>\n        </Ul>\n      </Box>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["BASIC_URL","PERSONAL_KEY","fetchTrendingMovies","axios","response","data","results","console","error","message","getMovie","movieId","searchMovies","query","getCast","cast","getReviews","Button","styled","Link","p","theme","colors","accent","white","space","H1","fontSizes","l","Text","xm","text","Title","Nav","Item","NavLink","black","secondary","Ul","useState","movies","setMovies","useParams","location","useLocation","navigate","useNavigate","backLinkHref","state","from","useEffect","then","Box","as","display","flexDirection","alignItems","to","onClick","src","poster_path","alt","title","width","pl","pt","vote_average","overview","genres","map","name","id"],"sourceRoot":""}