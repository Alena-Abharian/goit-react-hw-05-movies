{"version":3,"file":"static/js/769.ad03e9b2.chunk.js","mappings":"0RAEMA,EAAY,8BACZC,EAAe,mCAGd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,IAAAA,IAAA,UAAaH,EAAb,wCAAsDC,IAF1E,cAEGG,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAwBC,GAAxB,gGAEoBR,IAAAA,IAAA,UAAaH,EAAb,mBAAiCW,EAAjC,oBAAoDV,IAFxE,cAEGG,EAFH,yBAGIA,EAASC,MAHb,gCAKHE,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,gGAEoBV,IAAAA,IAAA,UAAaH,EAAb,kCAAgDC,EAAhD,kBAAsEY,IAF1F,cAEGT,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAuBH,GAAvB,gGAEoBR,IAAAA,IAAA,UAAaH,EAAb,mBAAiCW,EAAjC,4BAA4DV,IAFhF,cAEGG,EAFH,yBAGIA,EAASC,KAAKU,MAHlB,gCAKHR,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,gGAEoBR,IAAAA,IAAA,6CAAgDQ,EAAhD,sDAFpB,cAEGP,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gF,oJC5CMQ,EAAOC,EAAAA,GAAAA,GAAH,uCAIJC,EAAOD,EAAAA,GAAAA,GAAH,8CAIJE,EAAQF,EAAAA,GAAAA,GAAH,yFAMLG,EAAOH,EAAAA,GAAAA,EAAH,qF,mBCiBjB,EA1BgB,WACd,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QAOR,OALAe,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAWL,GACRgB,MAAK,SAAAtB,GAAI,OAAImB,EAAWnB,EAAf,GACb,GAAE,CAACM,KAGF,SAACiB,EAAA,EAAD,CAAKC,GAAG,UAAUC,GAAI,IAAKC,GAAI,GAA/B,SACGR,EAAQS,QACP,SAACf,EAAD,UACGM,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACjB,EAAD,YACE,SAACC,EAAD,UAAQc,KACR,SAACb,EAAD,UAAOc,MAFEC,EADA,OAOZ,6EAAmD,SAAC,MAAD,IAAnD,QAIV,C","sources":["api/api.js","components/reviews/Reviews.styled.jsx","components/reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASIC_URL = 'https://api.themoviedb.org/';\nconst PERSONAL_KEY = 'ad66edf283bb948b384e974542ed7aed';\n\n//page Home\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/trending/movie/day?api_key=${PERSONAL_KEY}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page MovieDetails\nexport async function getMovie(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}`);\n    return response.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Movies\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Cast\nexport async function getCast(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}`);\n    return response.data.cast;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Reviews\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ad66edf283bb948b384e974542ed7aed`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 18px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n  margin: 0;\n  padding-bottom: 24px;\n\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../api/api';\nimport Box from '../../components/Box';\nimport { Item, List, Text, Title } from './Reviews.styled';\nimport { BsEmojiFrown } from \"react-icons/bs\";\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviews(movieId)\n      .then(data => setReviews(data));\n  }, [movieId]);\n\n  return (\n    <Box as='section' pl={270} pr={20}>\n      {reviews.length ? (\n        <List>\n          {reviews.map(({ author, content, id }) =>\n            <Item key={id}>\n              <Title>{author}</Title>\n              <Text>{content}</Text>\n            </Item>\n          )}\n        </List>\n      ) : (<p>Sorry, we don't have any reviews for this movie <BsEmojiFrown/> </p>)}\n\n    </Box>\n  );\n};\n\nexport default Reviews;\n"],"names":["BASIC_URL","PERSONAL_KEY","fetchTrendingMovies","axios","response","data","results","console","error","message","getMovie","movieId","searchMovies","query","getCast","cast","getReviews","List","styled","Item","Title","Text","useState","reviews","setReviews","useParams","useEffect","then","Box","as","pl","pr","length","map","author","content","id"],"sourceRoot":""}