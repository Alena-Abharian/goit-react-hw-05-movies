{"version":3,"file":"static/js/734.9e4fe160.chunk.js","mappings":"4TAEMA,EAAY,8BACZC,EAAe,mCAGd,SAAeC,IAAtB,+B,aAAO,O,oBAAA,6GAEoBC,IAAAA,IAAA,UAAaH,EAAb,wCAAsDC,IAF1E,cAEGG,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAwBC,GAAxB,gGAEoBR,IAAAA,IAAA,UAAaH,EAAb,mBAAiCW,EAAjC,oBAAoDV,IAFxE,cAEGG,EAFH,yBAGIA,EAASC,MAHb,gCAKHE,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA4BC,GAA5B,gGAEoBV,IAAAA,IAAA,UAAaH,EAAb,kCAAgDC,EAAhD,kBAAsEY,IAF1F,cAEGT,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAAuBH,GAAvB,gGAEoBR,IAAAA,IAAA,UAAaH,EAAb,mBAAiCW,EAAjC,4BAA4DV,IAFhF,cAEGG,EAFH,yBAGIA,EAASC,KAAKU,MAHlB,gCAKHR,QAAQC,MAAM,KAAIC,SALf,gFAUA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA0BL,GAA1B,gGAEoBR,IAAAA,IAAA,6CAAgDQ,EAAhD,sDAFpB,cAEGP,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,MAAM,KAAIC,SALf,gF,qICdP,EA7Be,SAAC,GAAwB,IAAtBQ,EAAqB,EAArBA,eAChB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOL,EAAP,KAAcM,EAAd,KAcA,OACE,+BACE,kBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACGT,EAAMU,QAGXN,EAAeJ,EAChB,EAIG,WACE,kBAAOW,KAAK,OAAOC,SAfL,SAACJ,GACnBF,EAASE,EAAEK,OAAOC,MAAMC,cACzB,KAcK,2CAIP,E,6BCvBYC,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,4IAEN,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAnB,IAKC,SAAAH,GAAC,OAAIA,EAAEC,MAAMC,OAAOE,SAAnB,IAIDC,EAAWP,EAAAA,GAAAA,GAAH,4DCyBrB,EAhCe,WAAO,IAAD,EAEnB,GAA4BZ,EAAAA,EAAAA,UAAS,IAArC,eAAOoB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3CC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJJ,IACF/B,EAAAA,EAAAA,IAAa+B,GACVK,MAAK,SAAA1C,GAAO,OAAIiC,EAAUjC,EAAd,GAElB,GAAE,CAACqC,IAEJ,IAIMM,EAAgBX,EAAOY,QAAO,SAAAC,GAAK,OAAIA,EAAMC,MAAMxB,cAAcyB,SAASV,EAAYf,cAAnD,IAGzC,OACE,UAAC0B,EAAA,EAAD,CAAKC,GAAG,UAAUC,GAAI,GAAtB,WACE,SAAC,EAAD,CAAQvC,eATS,SAACU,GACpBe,EAA0B,KAAVf,EAAe,CAAEd,MAAOc,GAAU,CAAC,EACpD,KAQG,wBACGsB,EAAcQ,KAAI,gBAAGL,EAAH,EAAGA,MAAOM,EAAV,EAAUA,GAAV,OAAmB,SAACrB,EAAD,WAAmB,SAACR,EAAD,CAAM8B,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMhB,GAAzC,SAAqDO,KAAzDM,EAAlC,OAErB,SAAC,KAAD,MAGL,C","sources":["api/api.js","components/search/Search.jsx","page/movies/Movies.styled.jsx","page/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASIC_URL = 'https://api.themoviedb.org/';\nconst PERSONAL_KEY = 'ad66edf283bb948b384e974542ed7aed';\n\n//page Home\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/trending/movie/day?api_key=${PERSONAL_KEY}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page MovieDetails\nexport async function getMovie(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}?api_key=${PERSONAL_KEY}`);\n    return response.data;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Movies\nexport async function searchMovies(query) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/search/movie?api_key=${PERSONAL_KEY}&query=${query}`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Cast\nexport async function getCast(movieId) {\n  try {\n    const response = await axios.get(`${BASIC_URL}3/movie/${movieId}/credits?api_key=${PERSONAL_KEY}`);\n    return response.data.cast;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n\n//page Reviews\nexport async function getReviews(movieId) {\n  try {\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=ad66edf283bb948b384e974542ed7aed`);\n    return response.data.results;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({ onFilterMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleQuery = (e) => {\n    setQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!query.trim()) {\n      return;\n    }\n    onFilterMovies(query);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type='text' onChange={handleQuery} />\n        <button>Search</button>\n      </form>\n    </>\n  );\n};\n\nSearch.propTypes = {\n  onFilterMovies: PropTypes.func.isRequired,\n};\n\nexport default Search;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.black};\n  font-size: 16px;\n\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.secondary};\n  }\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 10px;\n  padding: 0;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams, Outlet, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../../api/api';\nimport Search from '../../components/search/Search';\nimport Box from '../../components/Box';\nimport { Item, ListItem } from './Movies.styled';\n\nconst Movies = () => {\n  //state search movies\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryParams = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (queryParams) {\n      searchMovies(queryParams)\n        .then(results => setMovies(results));\n    }\n  }, [queryParams]);\n\n  const filterMovies = (value) => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  const visibleMovies = movies.filter(movie => movie.title.toLowerCase().includes(queryParams.toLowerCase()));\n\n\n  return (\n    <Box as='section' pl={20}>\n      <Search onFilterMovies={filterMovies} />\n      <ul>\n        {visibleMovies.map(({ title, id }) => <ListItem key={id}><Item to={`/movies/${id}`} state={{from: location}}>{title}</Item></ListItem>)}\n      </ul>\n      <Outlet />\n    </Box>\n  );\n};\n\nexport default Movies;\n"],"names":["BASIC_URL","PERSONAL_KEY","fetchTrendingMovies","axios","response","data","results","console","error","message","getMovie","movieId","searchMovies","query","getCast","cast","getReviews","onFilterMovies","useState","setQuery","onSubmit","e","preventDefault","trim","type","onChange","target","value","toLowerCase","Item","styled","Link","p","theme","colors","black","secondary","ListItem","movies","setMovies","useSearchParams","searchParams","setSearchParams","queryParams","get","location","useLocation","useEffect","then","visibleMovies","filter","movie","title","includes","Box","as","pl","map","id","to","state","from"],"sourceRoot":""}